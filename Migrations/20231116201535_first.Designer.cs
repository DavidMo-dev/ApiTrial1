// <auto-generated />
using System;
using ApiTrial1.Data.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiTrial1.Migrations
{
    [DbContext(typeof(ApiTrialDbContext))]
    [Migration("20231116201535_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ADM_Roles");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedByLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("DeletedByLog")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("ADM_Users");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_User_Access", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ADM_User_Id")
                        .HasColumnType("int");

                    b.Property<string>("CreateDate")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ADM_User_Id");

                    b.ToTable("ADM_User_Accesses");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.DCM_Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileName")
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("UploadedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UploadedBy");

                    b.ToTable("DCM_Documents");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_User", b =>
                {
                    b.HasOne("ApiTrial1.Data.Entities.ADM_Role", "ADM_Role")
                        .WithMany("ADM_Users")
                        .HasForeignKey("RoleId");

                    b.Navigation("ADM_Role");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_User_Access", b =>
                {
                    b.HasOne("ApiTrial1.Data.Entities.ADM_User", "ADM_User")
                        .WithMany("ADM_User_Access")
                        .HasForeignKey("ADM_User_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ADM_User");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.DCM_Document", b =>
                {
                    b.HasOne("ApiTrial1.Data.Entities.ADM_User", "ADM_User_Uploader")
                        .WithMany("DMC_Documents")
                        .HasForeignKey("UploadedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ADM_User_Uploader");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_Role", b =>
                {
                    b.Navigation("ADM_Users");
                });

            modelBuilder.Entity("ApiTrial1.Data.Entities.ADM_User", b =>
                {
                    b.Navigation("ADM_User_Access");

                    b.Navigation("DMC_Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
